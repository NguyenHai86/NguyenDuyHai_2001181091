// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public partial class UIMap
    {
        public static void ClickCenter(UITestControl control)
        {
            Point location = control.BoundingRectangle.Location;
            location.Offset(control.BoundingRectangle.Width / 2,
                            control.BoundingRectangle.Height / 2);

            Mouse.Click(location);
        }
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1(float diemToan, float diemLy, float diemHoa, float diemRenLuyen)
        {
            #region Variable Declarations
            WinEdit uITxtDiemToanEdit = this.UIForm1Window.UITxtDiemToanWindow.UITxtDiemToanEdit;
            WinEdit uITxtDiemLyEdit = this.UIForm1Window.UITxtDiemLyWindow.UITxtDiemLyEdit;
            WinEdit uITxtDiemHoaEdit = this.UIForm1Window.UITxtDiemHoaWindow.UITxtDiemHoaEdit;
            WinEdit uITxtDiemRenLuyenEdit = this.UIForm1Window.UITxtDiemRenLuyenWindow.UITxtDiemRenLuyenEdit;
            WinEdit uITxtXepLoaiEdit = this.UIForm1Window.UITxtXepLoaiWindow.UITxtXepLoaiEdit;
            WinWindow uIXếploạiWindow = this.UIForm1Window.UIForm1Client.UIXếploạiWindow;
            #endregion

            // Launch '%USERPROFILE%\Desktop\NguyenDuyHai_2001181091\NguyenDuyHai_2001181091\bin\Debug\NguyenDuyHai_2001181091.exe'
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UIForm1WindowExePath, this.RecordedMethod1Params.UIForm1WindowAlternateExePath);

            // Type '5' in 'txtDiemToan' text box
            uITxtDiemToanEdit.Text = diemToan.ToString();

            // Type '{Tab}' in 'txtDiemToan' text box
            Keyboard.SendKeys(uITxtDiemToanEdit, this.RecordedMethod1Params.UITxtDiemToanEditSendKeys, ModifierKeys.None);

            // Type '6' in 'txtDiemLy' text box
            uITxtDiemLyEdit.Text = diemLy.ToString();

            // Type '{Tab}' in 'txtDiemLy' text box
            Keyboard.SendKeys(uITxtDiemLyEdit, this.RecordedMethod1Params.UITxtDiemLyEditSendKeys, ModifierKeys.None);

            // Type '9' in 'txtDiemHoa' text box
            uITxtDiemHoaEdit.Text = diemHoa.ToString();

            // Type '{Tab}' in 'txtDiemHoa' text box
            Keyboard.SendKeys(uITxtDiemHoaEdit, this.RecordedMethod1Params.UITxtDiemHoaEditSendKeys, ModifierKeys.None);

            // Type '5' in 'txtDiemRenLuyen' text box
            uITxtDiemRenLuyenEdit.Text = diemRenLuyen.ToString();

            // Type '{Tab}' in 'txtDiemRenLuyen' text box
            Keyboard.SendKeys(uITxtDiemRenLuyenEdit, this.RecordedMethod1Params.UITxtDiemRenLuyenEditSendKeys, ModifierKeys.None);

            // Type '55' in 'txtXepLoai' text box
            uITxtXepLoaiEdit.Text = this.RecordedMethod1Params.UITxtXepLoaiEditText;

            // Click 'Xếp loại' window
            ClickCenter(uIXếploạiWindow);
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1(string valueExcept)
        {
            #region Variable Declarations
            WinWindow uITxtXepLoaiWindow = this.UIForm1Window.UIForm1Client.UITxtXepLoaiWindow;
            #endregion

            // Verify that the 'ControlName' property of 'txtXepLoai' window equals 'txtXepLoai'
            var edit = new WinEdit(this.UIForm1Window.UITxtXepLoaiWindow.UITxtXepLoaiEdit);
            Assert.AreEqual(valueExcept, edit.Text);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\NguyenDuyHai_2001181091\NguyenDuyHai_2001181091\bin\Debug\NguyenDuyHai_2001181091.exe'
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\nguye\\Desktop\\NguyenDuyHai_2001181091\\NguyenDuyHai_2001181091\\bin\\Debug\\" +
            "NguyenDuyHai_2001181091.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\NguyenDuyHai_2001181091\NguyenDuyHai_2001181091\bin\Debug\NguyenDuyHai_2001181091.exe'
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\Desktop\\NguyenDuyHai_2001181091\\NguyenDuyHai_2001181091\\bin\\Debug\\N" +
            "guyenDuyHai_2001181091.exe";
        
        /// <summary>
        /// Type '5' in 'txtDiemToan' text box
        /// </summary>
        public string UITxtDiemToanEditText = "5";
        
        /// <summary>
        /// Type '{Tab}' in 'txtDiemToan' text box
        /// </summary>
        public string UITxtDiemToanEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '6' in 'txtDiemLy' text box
        /// </summary>
        public string UITxtDiemLyEditText = "6";
        
        /// <summary>
        /// Type '{Tab}' in 'txtDiemLy' text box
        /// </summary>
        public string UITxtDiemLyEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '9' in 'txtDiemHoa' text box
        /// </summary>
        public string UITxtDiemHoaEditText = "9";
        
        /// <summary>
        /// Type '{Tab}' in 'txtDiemHoa' text box
        /// </summary>
        public string UITxtDiemHoaEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '5' in 'txtDiemRenLuyen' text box
        /// </summary>
        public string UITxtDiemRenLuyenEditText = "5";
        
        /// <summary>
        /// Type '{Tab}' in 'txtDiemRenLuyen' text box
        /// </summary>
        public string UITxtDiemRenLuyenEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '55' in 'txtXepLoai' text box
        /// </summary>
        public string UITxtXepLoaiEditText = "55";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'txtXepLoai' window equals 'txtXepLoai'
        /// </summary>
        public string UITxtXepLoaiWindowControlName = "txtXepLoai";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITxtDiemToanWindow UITxtDiemToanWindow
        {
            get
            {
                if ((this.mUITxtDiemToanWindow == null))
                {
                    this.mUITxtDiemToanWindow = new UITxtDiemToanWindow(this);
                }
                return this.mUITxtDiemToanWindow;
            }
        }
        
        public UITxtDiemLyWindow UITxtDiemLyWindow
        {
            get
            {
                if ((this.mUITxtDiemLyWindow == null))
                {
                    this.mUITxtDiemLyWindow = new UITxtDiemLyWindow(this);
                }
                return this.mUITxtDiemLyWindow;
            }
        }
        
        public UITxtDiemHoaWindow UITxtDiemHoaWindow
        {
            get
            {
                if ((this.mUITxtDiemHoaWindow == null))
                {
                    this.mUITxtDiemHoaWindow = new UITxtDiemHoaWindow(this);
                }
                return this.mUITxtDiemHoaWindow;
            }
        }
        
        public UITxtDiemRenLuyenWindow UITxtDiemRenLuyenWindow
        {
            get
            {
                if ((this.mUITxtDiemRenLuyenWindow == null))
                {
                    this.mUITxtDiemRenLuyenWindow = new UITxtDiemRenLuyenWindow(this);
                }
                return this.mUITxtDiemRenLuyenWindow;
            }
        }
        
        public UITxtXepLoaiWindow UITxtXepLoaiWindow
        {
            get
            {
                if ((this.mUITxtXepLoaiWindow == null))
                {
                    this.mUITxtXepLoaiWindow = new UITxtXepLoaiWindow(this);
                }
                return this.mUITxtXepLoaiWindow;
            }
        }
        
        public UIForm1Client UIForm1Client
        {
            get
            {
                if ((this.mUIForm1Client == null))
                {
                    this.mUIForm1Client = new UIForm1Client(this);
                }
                return this.mUIForm1Client;
            }
        }
        #endregion
        
        #region Fields
        private UITxtDiemToanWindow mUITxtDiemToanWindow;
        
        private UITxtDiemLyWindow mUITxtDiemLyWindow;
        
        private UITxtDiemHoaWindow mUITxtDiemHoaWindow;
        
        private UITxtDiemRenLuyenWindow mUITxtDiemRenLuyenWindow;
        
        private UITxtXepLoaiWindow mUITxtXepLoaiWindow;
        
        private UIForm1Client mUIForm1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtDiemToanWindow : WinWindow
    {
        
        public UITxtDiemToanWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtDiemToan";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtDiemToanEdit
        {
            get
            {
                if ((this.mUITxtDiemToanEdit == null))
                {
                    this.mUITxtDiemToanEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtDiemToanEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Điểm toán";
                    this.mUITxtDiemToanEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtDiemToanEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtDiemToanEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtDiemLyWindow : WinWindow
    {
        
        public UITxtDiemLyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtDiemLy";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtDiemLyEdit
        {
            get
            {
                if ((this.mUITxtDiemLyEdit == null))
                {
                    this.mUITxtDiemLyEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtDiemLyEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Điểm lý";
                    this.mUITxtDiemLyEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtDiemLyEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtDiemLyEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtDiemHoaWindow : WinWindow
    {
        
        public UITxtDiemHoaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtDiemHoa";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtDiemHoaEdit
        {
            get
            {
                if ((this.mUITxtDiemHoaEdit == null))
                {
                    this.mUITxtDiemHoaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtDiemHoaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Điểm hóa";
                    this.mUITxtDiemHoaEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtDiemHoaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtDiemHoaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtDiemRenLuyenWindow : WinWindow
    {
        
        public UITxtDiemRenLuyenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtDiemRenLuyen";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtDiemRenLuyenEdit
        {
            get
            {
                if ((this.mUITxtDiemRenLuyenEdit == null))
                {
                    this.mUITxtDiemRenLuyenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtDiemRenLuyenEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Điểm rèn luyện";
                    this.mUITxtDiemRenLuyenEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtDiemRenLuyenEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtDiemRenLuyenEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UITxtXepLoaiWindow : WinWindow
    {
        
        public UITxtXepLoaiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtXepLoai";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtXepLoaiEdit
        {
            get
            {
                if ((this.mUITxtXepLoaiEdit == null))
                {
                    this.mUITxtXepLoaiEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtXepLoaiEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Kết quả xếp loại";
                    this.mUITxtXepLoaiEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtXepLoaiEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtXepLoaiEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIForm1Client : WinClient
    {
        
        public UIForm1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Form1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinWindow UIXếploạiWindow
        {
            get
            {
                if ((this.mUIXếploạiWindow == null))
                {
                    this.mUIXếploạiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIXếploạiWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Xếp loại";
                    this.mUIXếploạiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIXếploạiWindow.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIXếploạiWindow;
            }
        }
        
        public WinWindow UITxtXepLoaiWindow
        {
            get
            {
                if ((this.mUITxtXepLoaiWindow == null))
                {
                    this.mUITxtXepLoaiWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtXepLoaiWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Kết quả xếp loại";
                    this.mUITxtXepLoaiWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtXepLoaiWindow.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITxtXepLoaiWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIXếploạiWindow;
        
        private WinWindow mUITxtXepLoaiWindow;
        #endregion
    }
}
